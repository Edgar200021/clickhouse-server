services:
  api_test:
    build:
      context: .
      target: testing
    depends_on:
      postgres_test:
        condition: service_healthy
      redis_test:
        condition: service_healthy
    environment:
      DATABASE_HOST: postgres_test
      REDIS_HOST: redis_test
    env_file: .env.test
  postgres_test:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5
  redis_test:
    image: redis:8-alpine
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping"]
      interval: 5s
      timeout: 3s
      retries: 5
